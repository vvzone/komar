<?php

namespace DoctrineORMModule\Proxy\__CG__\Object\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Document extends \Object\Entity\Document implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'id', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'name', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'date', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'documentNumber', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'documentAuthor', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'documentType', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'currentNodeLevel', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'availableNodes', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'linkedDocument', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'route', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'documentAttributes', 'inputFilter', 'EntityName');
        }

        return array('__isInitialized__', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'id', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'name', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'date', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'documentNumber', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'documentAuthor', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'documentType', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'currentNodeLevel', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'availableNodes', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'linkedDocument', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'route', '' . "\0" . 'Object\\Entity\\Document' . "\0" . 'documentAttributes', 'inputFilter', 'EntityName');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Document $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', array($date));

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', array());

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDocumentNumber($documentNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocumentNumber', array($documentNumber));

        return parent::setDocumentNumber($documentNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumentNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumentNumber', array());

        return parent::getDocumentNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setDocumentAuthor(\Object\Entity\Person $documentAuthor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocumentAuthor', array($documentAuthor));

        return parent::setDocumentAuthor($documentAuthor);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumentAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumentAuthor', array());

        return parent::getDocumentAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setDocumentType(\Object\Entity\DocumentType $documentType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocumentType', array($documentType));

        return parent::setDocumentType($documentType);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumentType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumentType', array());

        return parent::getDocumentType();
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumentTypeName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumentTypeName', array());

        return parent::getDocumentTypeName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrentNodeLevel(\Object\Entity\NodeLevel $currentNodeLevel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrentNodeLevel', array($currentNodeLevel));

        return parent::setCurrentNodeLevel($currentNodeLevel);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrentNodeLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrentNodeLevel', array());

        return parent::getCurrentNodeLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function addLinkedDocument(\Object\Entity\LinkedDocument $linkedDocument)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLinkedDocument', array($linkedDocument));

        return parent::addLinkedDocument($linkedDocument);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLinkedDocument(\Object\Entity\LinkedDocument $linkedDocument)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLinkedDocument', array($linkedDocument));

        return parent::removeLinkedDocument($linkedDocument);
    }

    /**
     * {@inheritDoc}
     */
    public function getLinkedDocument()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLinkedDocument', array());

        return parent::getLinkedDocument();
    }

    /**
     * {@inheritDoc}
     */
    public function addRoute(\Object\Entity\Route $route)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRoute', array($route));

        return parent::addRoute($route);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRoute(\Object\Entity\Route $route)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRoute', array($route));

        return parent::removeRoute($route);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoute', array());

        return parent::getRoute();
    }

    /**
     * {@inheritDoc}
     */
    public function addDocumentAttributes($attribute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDocumentAttributes', array($attribute));

        return parent::addDocumentAttributes($attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDocumentAttributes($attribute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDocumentAttributes', array($attribute));

        return parent::removeDocumentAttributes($attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumentAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumentAttributes', array());

        return parent::getDocumentAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumentName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumentName', array());

        return parent::getDocumentName();
    }

    /**
     * {@inheritDoc}
     */
    public function getAll()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAll', array());

        return parent::getAll();
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumentSimple()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumentSimple', array());

        return parent::getDocumentSimple();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityName', array());

        return parent::getEntityName();
    }

    /**
     * {@inheritDoc}
     */
    public function setInputFilter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInputFilter', array());

        return parent::setInputFilter();
    }

    /**
     * {@inheritDoc}
     */
    public function getInputFilter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInputFilter', array());

        return parent::getInputFilter();
    }

}
