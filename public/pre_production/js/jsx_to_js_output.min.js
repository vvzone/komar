var ErrorMsg=React.createClass({displayName:"ErrorMsg",render:function(){var message="",header="";return header=void 0==this.props.header?"Ошибка":this.props.header,message=void 0==this.props.msg?"Неизвестная ошибка":this.props.msg,React.DOM.div({className:"alert alert-error"},React.DOM.a({href:"#",className:"close","data-dismiss":"alert"},"×"),React.DOM.strong(null,header),React.DOM.br(null),message)}}),ButtonDiscard=React.createClass({displayName:"ButtonDiscard",handleClick:function(){var action="save";this.props.clicked(action)},render:function(){return"true"==this.props.mini?React.DOM.button({className:"ButtonDiscard btn btn-xs btn-danger btn-mini",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-ban-circle"})):React.DOM.button({className:"ButtonDiscard btn btn-xs btn-danger",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-ban-circle"}),"  Сброс")}}),ButtonAdd=React.createClass({displayName:"ButtonAdd",handleClick:function(){var action="add";this.props.clicked(action)},render:function(){return"true"==this.props.mini?React.DOM.button({className:"ButtonSave btn btn-xs btn-success btn-mini",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-plus"})):React.DOM.button({className:"ButtonSave btn btn-xs btn-success",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-plus"}),"  Добавить")}}),ButtonSave=React.createClass({displayName:"ButtonSave",handleClick:function(){var action="save";this.props.clicked(action)},render:function(){return"true"==this.props.mini?React.DOM.button({className:"ButtonSave btn btn-xs btn-success btn-mini",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-ok"})):React.DOM.button({className:"ButtonSave btn btn-xs btn-success",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-ok"}),"  Сохранить")}}),ButtonEdit=React.createClass({displayName:"ButtonEdit",handleClick:function(){var action="edit";this.props.clicked(action)},render:function(){return"true"==this.props.mini?React.DOM.button({className:"ButtonEdit btn btn-xs btn-warning btn-mini",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-pencil"})):React.DOM.button({className:"ButtonEdit btn btn-xs btn-warning",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-pencil"}),"  Редактировать")}}),ButtonDelete=React.createClass({displayName:"ButtonDelete",handleClick:function(){var action="delete";this.props.clicked(action)},render:function(){return"true"==this.props.mini?React.DOM.button({className:"ButtonDelete btn btn-xs btn-danger btn-mini",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-remove"})):React.DOM.button({className:"ButtonDelete btn btn-xs btn-danger",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-remove"}),"  Удалить")}}),ItemLink=React.createClass({displayName:"ItemLink",handleClick:function(e){e.preventDefault(),this.props.onClick(this.props.item)},render:function(){return React.DOM.a({draggable:"false",href:this.props.item.id,onClick:this.handleClick},this.props.item.name)}}),CatLink=React.createClass({displayName:"CatLink",getInitialState:function(){return{visible:!0,click:void 0,screen:[]}},componentDidMount:function(){null!=this.props.screen.childNodes&&this.setState({visible:!1})},whenClicked:function(link){var customEvent=new CustomEvent("catLinkClick",{detail:{screen_name:link.screen},bubbles:!0});this.getDOMNode().dispatchEvent(customEvent)},render:function(){var link=this.props.screen,src="./react/get/screen/"+link.screen,className="",style={};return this.state.visible||(style.display="none"),null!=link.childNodes?(className="glyphicon togglable",className+=this.state.visible?" glyphicon-minus":" glyphicon-plus",null!=link.isNotScreen?React.DOM.li(null,React.DOM.span({onClick:this.toggle,className:className}),React.DOM.div({className:"childs",onClick:this.toggle},link.name),React.DOM.div({style:style},CatTreeLinksList({source:null,childs:link.childNodes}))):React.DOM.li(null,React.DOM.span({onClick:this.toggle,className:className}),React.DOM.a({className:"childs",href:src},link.name),React.DOM.div({style:style},CatTreeLinksList({source:null,childs:link.childNodes})))):React.DOM.li({style:style},ItemLink({item:link,onClick:this.whenClicked}))},toggle:function(){this.setState({visible:!this.state.visible})}}),CatTreeLinksList=React.createClass({displayName:"CatTreeLinksList",getInitialState:function(){return{links:[],screens:"",entities:""}},componentDidMount:function(){if(null!=this.props.childs){var links=[],links=this.props.childs;this.setState({links:links})}else $.get("http://zend_test/main/ajax",function(result){var links=[];links=result,this.setState({links:links})}.bind(this))},handleClick:function(){},render:function(){{var links_output=[];this.state.links}if("[object Array]"===Object.prototype.toString.call(this.state.links)){var self=this;return links_output=this.state.links.map(function(l){return l.isNotScreen&&null==l.childNodes?React.DOM.li(null,React.DOM.div({className:"tree_not_link"},l.name)):l.isNonIndependent?void 0:CatLink({screen:l,key:l.id,onClick:self.handleClick})}),React.DOM.ul({className:"nav nav-sidebar cattree"},links_output)}return ErrorMsg({msg:"Неправильный формат ответа сервера"})}}),CatScreen=React.createClass({displayName:"CatScreen",whenReaction:function(){},render:function(){var cat=this.props.cat,source="./react/get/cat/"+cat;return React.DOM.div({className:"well"},CatTreeLinksList({source:source,childs:null,reaction:this.whenReaction}))}}),test_screen=[];test_screen[0]="test_entity",test_screen[1]="child_test1",test_screen[2]="child_test2";var sys=[];sys[0]="country",sys[1]="sys1",sys[2]="sys2";var rank=[];rank[0]="rank";var position=[];position[0]="position";var pass_doc_types=[];pass_doc_types[0]="pass_doc_types";var address_types=[];address_types[0]="address_types";var countries=[];countries[0]="countries";var region_types=[];region_types[0]="region_types";var regions=[];regions[0]="regions";var location_types=[];location_types[0]="location_types";var street_types=[];street_types[0]="street_types";var sex_types=[];sex_types[0]="sex_types";var commander_types=[];commander_types[0]="commander_types";var screen_entities={};screen_entities.test_screen=test_screen,screen_entities.sys=sys,screen_entities.rank=rank,screen_entities.pass_doc_types=pass_doc_types,screen_entities.position=position,screen_entities.address_types=address_types,screen_entities.countries=countries,screen_entities.region_types=region_types,screen_entities.regions=regions,screen_entities.location_types=location_types,screen_entities.street_types=street_types,screen_entities.sex_types=sex_types,screen_entities.commander_types=commander_types;var properties_types=[];properties_types.name="tiny_text",properties_types.name_min="tiny_text",properties_types.description="small_text",properties_types.seriesMask="tiny_text",properties_types.numberMask="tiny_text",properties_types.isFull="bool_select",properties_types.isMain="bool_select",properties_types.isSeries="bool_select",properties_types.priority="tiny_text",properties_types.code="tiny_text",properties_types.fullname="small_text",properties_types.shortname="tiny_text",properties_types.mask="tiny_text",properties_types.isPeriodic="bool_select",properties_types.period_length="tiny_text",properties_types.start_date="tiny_text",properties_types.min_index="tiny_text",properties_types.isDraft="bool_select",properties_types.singleNumeration="bool_select",properties_types.isService="bool_select";var config_search=[],ControlTinyText=React.createClass({displayName:"ControlTinyText",mixins:[ControlsMixin],getInitialState:function(){return{value:this.props.value,discard:this.props.discard}},render:function(){var id="tiny_control_"+this.props.russian_name;return React.DOM.div({className:"form-group"},React.DOM.label({htmlFor:id},this.props.russian_name),React.DOM.input({type:"text",className:"form-control",name:this.props.name,value:this.state.value,onChange:this.handleChange}))}}),ControlSmallText=React.createClass({displayName:"ControlSmallText",mixins:[ControlsMixin],getInitialState:function(){return{value:"",discard:void 0}},render:function(){var id="small_control_"+this.props.russian_name;return React.DOM.div({className:"form-group"},React.DOM.label({htmlFor:id},this.props.russian_name),React.DOM.textarea({className:"form-control",id:id,name:this.props.name,value:this.state.value,onChange:this.handleChange}))}}),ControlBoolSelect=React.createClass({displayName:"ControlBoolSelect",mixins:[ControlsMixin],getInitialState:function(){return{value:"",discard:void 0}},render:function(){var id="bool_select_"+this.props.russian_name,selected=this.state.value;return React.DOM.div({className:"form-group"},React.DOM.label({htmlFor:id},this.props.russian_name),React.DOM.select({value:selected,name:this.props.name,id:id,onChange:this.handleChange},React.DOM.option({value:"true"},"Да"),React.DOM.option({value:"false"},"Нет")))}}),ControlRouter=React.createClass({displayName:"ControlRouter",getInitialState:function(){return{value:"",discard:!1}},componentWillReceiveProps:function(prop){this.setState({discard:prop.discard})},callBack:function(property){this.props.callback(property)},render:function(){var type=this.props.type,value=this.props.value,name=this.props.name,russian_name=this.props.russian_name,discard=this.props.discard,self=this;switch(type){case"tiny_text":return ControlTinyText({value:value,name:name,russian_name:russian_name,discard:discard,callback:self.callBack});case"small_text":return ControlSmallText({value:value,name:name,russian_name:russian_name,discard:discard,callback:self.callBack});case"bool_select":return ControlBoolSelect({value:value,name:name,russian_name:russian_name,discard:discard,callback:self.callBack})}return React.DOM.div(null)}}),ControlsMixin=function(){return{discardChanges:function(){this.setState({value:this.props.value})},componentWillMount:function(){this.setState({value:this.props.value}),this.setState({discard:this.props.discard})},handleChange:function(event){this.setState({value:event.target.value});var property={};property[this.props.name]=event.target.value,this.props.callback(property)}}}();ButtonListBoxLeft=React.createClass({displayName:"ButtonListBoxLeft",handleClick:function(){var action="move_left";this.props.clicked(action)},render:function(){return"true"==this.props.mini?React.DOM.button({className:"ButtonMoveLeft btn btn-xs btn-primary",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-chevron-left"})):React.DOM.button({className:"ButtonMoveLeft btn btn-xs btn-link btn-block",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-chevron-left"}))}}),ButtonListBoxRight=React.createClass({displayName:"ButtonListBoxRight",handleClick:function(){var action="move_right";this.props.clicked(action)},render:function(){return"true"==this.props.mini?React.DOM.button({className:"ButtonMoveRight btn btn-xs btn-primary",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-chevron-right"})):React.DOM.button({className:"ButtonMoveRight btn btn-xs btn-link btn-block",type:"button",onClick:this.handleClick},React.DOM.span({className:"glyphicon glyphicon-chevron-right"}))}});var SimpleSelect=React.createClass({displayName:"SimpleSelect",getInitialState:function(){return{options:[],selected:""}},handleChange:function(event){this.setState({selected:event.target.value});var property={};property[this.props.entity.db_prop_name]=event.target.value,this.props.callback(property)},componentDidMount:function(){this.setState({selected:this.props.selected}),$.get("http://zend_test/main/"+this.props.source,function(result){var arr=[];for(var item in result.data)arr[result.data[item].id]=result.data[item];this.setState({options:arr})}.bind(this))},render:function(){var options=[],selected=0;this.state.selected&&(selected=this.state.selected);for(var key in this.state.options)options.push(React.DOM.option({key:this.state.options[key].id,value:this.state.options[key].id,id:this.state.options[key].id,onClick:this.handleClick},this.state.options[key].name));return React.DOM.select({value:selected,onChange:this.handleChange},options)}}),ListBox=React.createClass({displayName:"ListBox",getInitialState:function(){return{selected:[]}},handleClickButton:function(action){var callback=[];callback.action=action,callback.id=this.state.selected;var callback_item=[];callback_item=this.props.items[callback.id],callback.item=callback_item,this.props.callback(callback),this.forceUpdate()},handleChange:function(event){this.setState({selected:event.target.value})},render:function(){var list_box_items=[];for(var key in this.props.items)list_box_items.push(React.DOM.option({key:this.props.items[key].id,value:this.props.items[key].id,id:this.props.items[key].id,onClick:this.handleClick},this.props.items[key].name));return"right"==this.props.type?React.DOM.div({className:"list_box"},React.DOM.div({className:"list_box_select"},React.DOM.select({multiple:"",size:"10",onChange:this.handleChange},list_box_items)),React.DOM.div({className:"list_box_cp"},ButtonListBoxLeft({clicked:this.handleClickButton}))):React.DOM.div({className:"list_box"},React.DOM.div({className:"list_box_select"},React.DOM.select({multiple:"",size:"10",onChange:this.handleChange},list_box_items)),React.DOM.div({className:"list_box_cp"},ButtonListBoxRight({clicked:this.handleClickButton})))}}),ListBoxTwoSide=React.createClass({displayName:"ListBoxTwoSide",getInitialState:function(){return{items_left:[],items_right:[]}},listChange:function(callback){var current_list=[],target_list=[];"move_left"==callback.action?(current_list=this.state.items_right,target_list=this.state.items_left):(current_list=this.state.items_left,target_list=this.state.items_right),delete current_list[callback.id],target_list[callback.id]=callback.item,"move_left"==callback.action?(this.setState({items_right:current_list}),this.setState({items_left:target_list})):(this.setState({items_left:current_list}),this.setState({items_right:target_list}))},componentDidMount:function(){var arr_items_2_select=[];$.get("http://zend_test/main/"+this.props.source_right,function(result){var arr=[];for(var item in result.data)arr[result.data[item].id]=result.data[item];arr_items_2_select=arr,this.setState({items_right:arr})}.bind(this)),$.get("http://zend_test/main/"+this.props.source_left,function(result){var arr=[];for(var item in result.data)arr[result.data[item].id]=arr_items_2_select[result.data[item].id];this.setState({items_left:arr})}.bind(this))},render:function(){var combined=[],items_left=this.state.items_left,items_right=this.state.items_right;for(var id in items_left)delete items_right[id];return combined[0]=ListBox({key:"combo",key_prefix:"left",items:items_left,callback:this.listChange,type:"left"}),combined[1]=ListBox({key:"combo_right",key_prefix:"right",items:items_right,callback:this.listChange,type:"right"}),console.info("LIST BOX PROPS"),console.info(this.props),React.DOM.div({className:"two-way-list-box"},combined)}}),ListItem=React.createClass({displayName:"ListItem",getInitialState:function(){return{item:[],item_dependencies:[],open:!1}},whenClicked:function(){this.setState({open:1==this.state.open?!1:!0})},componentWillMount:function(){this.setState({item:this.props.item})},whenClickedCP:function(action){if(action){var customEvent=new CustomEvent("modalWindowOpen",{detail:{action:action,source:this.props.source,entity:this.props.entity.entity_name,item:this.state.item,current_id:this.props.item.id},bubbles:!0});this.getDOMNode().dispatchEvent(customEvent)}},render:function(){var delete_key="delete/"+this.props.item.id,edit_key="edit/"+this.props.item.id,item_additional_info=[],editable=this.props.prototype.editable_properties;if(1==this.state.open){for(var prop in this.state.item)editable[prop]&&item_additional_info.push(React.DOM.div(null,editable[prop],":",this.state.item[prop]))}{var edit_properties_box=[];this.state.item}return React.DOM.div({className:"item"},React.DOM.div({className:"item_name"},ItemLink({item:this.props.item,onClick:this.whenClicked})),React.DOM.div({className:"item_cp"},ButtonEdit({clicked:this.whenClickedCP,id:this.props.item.id,key:edit_key,mini:this.props.non_base}),ButtonDelete({clicked:this.whenClickedCP,id:this.props.item.id,key:delete_key,mini:this.props.non_base})),item_additional_info,edit_properties_box)}}),MainList=React.createClass({displayName:"MainList",getInitialState:function(){return{items:[]}},componentDidMount:function(){var url="";if(this.props.entity.host){var pole_name="id";this.props.entity.db_prop_name&&(pole_name=this.props.entity.db_prop_name),url="http://zend_test/main/"+this.props.source+"/search/"+pole_name+"/"+this.props.entity.host.id}else url="http://zend_test/main/"+this.props.source;$.get(url,function(response){this.setState({items:response})}.bind(this)).error(function(){alert("Network Error.")})},searchReceived:function(results){this.setState({items:results})},whenClickedCP:function(action){if(action){console.info("this.props.entity"),console.info(this.props.entity);var customEvent=new CustomEvent("modalWindowOpen",{detail:{action:action,source:this.props.source,entity:this.props.entity.entity_name},bubbles:!0});this.getDOMNode().dispatchEvent(customEvent)}},render:function(){var output=[],self=this;for(var item in this.state.items.data)output.push(ListItem({source:this.props.source,item:this.state.items.data[item],prototype:this.state.items.prototype,key:this.state.items.data[item].id,entity:this.props.entity,dependencies:this.props.dependencies}));var list_header=[],instant_search_box=[];return instant_search_box[0]=React.DOM.div({className:"InstantSeacrh"},InstantSearch({source:this.props.source,searchReceived:this.searchReceived})),list_header[0]=instant_search_box,list_header[1]=React.DOM.div({className:"ButtonAdd"},ButtonAdd({clicked:self.whenClickedCP})),React.DOM.div({className:"List"},React.DOM.div({className:"ListHeader"},list_header),React.DOM.div({className:"MainList"},output))}}),storage={},TreeClassMixin=function(){return{dragStart:function(e){this.dragged=e.currentTarget,e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("text/html",e.currentTarget);var data={id:e.currentTarget.id,node:this.state.node};storage.dragged=data},dragOver:function(e){e.preventDefault(),this.over=e.currentTarget,this.over!=this.dragged&&$(this.over).addClass("tree_over_node")},dragLeave:function(e){e.preventDefault(),$(this.over).removeClass("tree_over_node")},dragEnd:function(e){e.preventDefault(),$(this.over).removeClass("tree_over_node")},drop:function(e){e.preventDefault(),$(this.over).removeClass("tree_over_node");var droppedOn=e.currentTarget;if(droppedOn.id!=storage.dragged.id){var movedNode={dragged:storage.dragged,droppedOn_id:droppedOn.id},customEvent=new CustomEvent("TreeNodeMove",{detail:{movedNode:movedNode},bubbles:!0});this.getDOMNode().dispatchEvent(customEvent)}}}}(),TreeNodeBox=React.createClass({displayName:"TreeNodeBox",render:function(){var key="tree_box_name"+this.props.item.id;return React.DOM.span({className:"tree_box_node_name",key:key},this.props.item.name)}}),TreeNode=React.createClass({displayName:"TreeNode",mixins:[TreeClassMixin],getInitialState:function(){return{visible:!0,node:this.props.node,open:!1,dependency_items:[]}},closeState:function(e){this.props.node.id!=e.detail.id&&this.setState({open:!1})},componentDidMount:function(){null!=this.props.node.childNodes&&this.setState({visible:!1}),window.addEventListener("closeWhoOpenEvent",this.closeState,!0)},componentWillUnmount:function(){window.removeEventListener("closeWhoOpenEvent",this.closeState,!0)},nodeControlClicked:function(action){var customEvent=new CustomEvent("modalWindowOpen",{detail:{action:action,entity:"doc_type_groups_edit",item:this.props.node,current_id:this.props.node.id},bubbles:!0});this.getDOMNode().dispatchEvent(customEvent)},whenClicked:function(){this.setState({open:1==this.state.open?!1:!0});var closeWhoOpenEvent=new CustomEvent("closeWhoOpenEvent",{detail:{id:this.props.node.id},bubbles:!0});this.getDOMNode().dispatchEvent(closeWhoOpenEvent)},getNodeTreeDependency:function(){if(console.info("===getNodeTreeDependency==="),"undefined"!=typeof this.props.tree_dependency.id_name_in_dependency){var url="http://zend_test/main/"+this.props.tree_dependency.source+"/search/"+this.props.tree_dependency.id_name_in_dependency+"/"+this.props.node.id,data="";return console.info("url: "+url),$.get(url,function(result){var dependency_items=[];dependency_items=result.data,data=result.data}.bind(this)),data}},render:function(){var className="",style={};this.state.visible||(style.display="none");var dependency_box=[];if(console.info("this.props.tree_dependency"),console.info(this.props.tree_dependency),"undefined"!=typeof this.props.tree_dependency&&(className="glyphicon",className+=1==this.state.open?" glyphicon-chevron-left":" glyphicon-chevron-right",dependency_box[0]=React.DOM.div({className:"dependency_open_link"},React.DOM.span({className:className,onClick:this.whenClicked})),1==this.state.open&&(dependency_box[1]=React.DOM.div({className:"tree_dependency_box"},React.DOM.div({className:"dependencies_list"},EntityBlock({entity_name:this.props.tree_dependency.entity_name,db_prop_name:this.props.tree_dependency.id_name_in_dependency,host:this.props.node}))))),null!=this.props.node.childNodes&&this.props.node.childNodes.length>0){className="glyphicon togglable",className+=this.state.visible?" glyphicon-minus":" glyphicon-plus";var node_key="tree_box_node"+this.props.node.id,tree_dependency="";return React.DOM.li(null,React.DOM.div({className:"tree_box_node",draggable:"true",onDrop:this.drop,onDragEnd:this.dragEnd,onDragStart:this.dragStart,onDragOver:this.dragOver,onDragLeave:this.dragLeave,key:node_key,id:this.props.node.id},React.DOM.span({onClick:this.toggle,className:className}),TreeNodeBox({item:this.props.node}),dependency_box),React.DOM.div({className:"tree_box_node_controls"},ButtonAdd({mini:"true",clicked:this.nodeControlClicked}),ButtonEdit({mini:"true",clicked:this.nodeControlClicked}),ButtonDelete({mini:"true",clicked:this.nodeControlClicked})),React.DOM.div({className:"tree_childs",style:style},MainTree({source:null,childs:this.props.node.childNodes,tree_dependency:this.props.tree_dependency})))}return React.DOM.li({style:style},React.DOM.div({className:"tree_box_node",draggable:"true",onDragEnd:this.dragEnd,onDragStart:this.dragStart,onDragOver:this.dragOver,onDragLeave:this.dragLeave,onDrop:this.drop,id:this.props.node.id},TreeNodeBox({item:this.props.node,tree_dependency:tree_dependency}),dependency_box),React.DOM.div({className:"tree_box_node_controls"},ButtonAdd({mini:"true",clicked:this.nodeControlClicked}),ButtonEdit({mini:"true",clicked:this.nodeControlClicked}),ButtonDelete({mini:"true",clicked:this.nodeControlClicked})))},toggle:function(){this.setState({visible:!this.state.visible});var closeWhoOpenEvent=new CustomEvent("closeWhoOpenEvent",{detail:{id:this.props.node.id},bubbles:!0});this.getDOMNode().dispatchEvent(closeWhoOpenEvent)}}),MainTree=React.createClass({displayName:"MainTree",getInitialState:function(){return{items:[],dependency_items:[]}},handleMyEvent:function(event){var items=[];items=this.state.items;var droppedOn_Id=event.detail.movedNode.droppedOn_id,dragged=event.detail.movedNode.dragged,clean_items=this.itemRemoveFromArrayById(dragged.id,dragged.node,droppedOn_Id),new_items=this.itemAddInArrayById(droppedOn_Id,dragged.node,clean_items);this.setState({items:new_items})},itemRemoveFromArrayById:function(value){for(var array=this.state.items,i=0;i<array.length;i++)if(array[i]&&array[i].id==value)return delete array[i],array;return array},itemAddInArrayById:function(droppedOn_Id,new_child,clean_items){{var array={};new_child.parent_id}new_child.parent_id=parseInt(droppedOn_Id),array=clean_items;for(var i=0;i<array.length;i++)if(array[i]&&(console.info("array.length= "+array.length+" i="+i+" array[i].id="+array[i].id+" droppedOn_Id= "+droppedOn_Id),array[i].id==droppedOn_Id)){if(array[i].childNodes){var childs={};return childs=array[i].childNodes,childs.push(new_child),array[i].childNodes.push(new_child),array}array[i].childNodes=[],array[i].childNodes.push(new_child);break}return array},componentWillMount:function(){window.addEventListener("TreeNodeMove",this.handleMyEvent,!0)},componentWillUnmount:function(){window.removeEventListener("TreeNodeMove",this.handleMyEvent,!0)},treeSearch:function(node){return"undefined"!=typeof node.childNodes?node.id:void this.treeSearch(node.id)},componentDidMount:function(){if(null!=this.props.childs)this.setState({items:this.props.childs});else{var url="http://zend_test/main/"+this.props.source,items=[],items_ids_for_check=[];$.ajax({type:"GET",url:""+url,success:function(result){items=result.data,this.setState({items:items}),items.map(function(item){items_ids_for_check.push(item.id)}),$.ajax({type:"POST",url:"http://zend_test/main/"+this.props.tree_dependency.source+"/dependency/"+this.props.tree_dependency.id_name_in_dependency,data:result.data.map(function(item){return item.id}),success:function(){}.bind(this),dataType:"json"})}.bind(this),dataType:"json"})}},render:function(){var tree_output=[];if("[object Array]"===Object.prototype.toString.call(this.state.items)){var self=this;return tree_output=this.state.items.map(function(node){return TreeNode({key:node.id,node:node,tree_dependency:self.props.tree_dependency})}),React.DOM.ul({className:"tree"},tree_output)}}}),EntityBlock=React.createClass({displayName:"EntityBlock",render:function(){var class_name=this.props.entity_name,current_id=this.props.current_id,entity={};switch(entity.entity_name=this.props.entity_name,entity.db_prop_name=this.props.db_prop_name,entity.host=this.props.host,entity.current_id=this.props.item,entity.item=this.props.item,class_name){case"ranks":return FormEntRanks({entity:entity,callback:this.handleCallback});case"positions":return FormEntPositions({entity:entity,callback:this.handleCallback});case"rank_position":return FormEntRankPosition({host_id:current_id,callback:this.handleCallback});case"pass_doc_types":return FormEntPassDocTypes({entity:entity,callback:this.handleCallback});case"address_types":return FormEntAddressTypes({entity:entity,callback:this.handleCallback});case"countries":return FormEntCountries({entity:entity,callback:this.handleCallback});case"region_types":return FormEntRegionTypes({entity:entity,callback:this.handleCallback});case"region_types_selector":return SelectorRegionTypes({selected:current_id,entity:entity,callback:this.handleCallback});case"regions":return FormEntRegions({entity:entity,callback:this.handleCallback});case"location_types":return FormEntLocationTypes({entity:entity,callback:this.handleCallback});case"street_types":return FormEntStreetTypes({entity:entity,callback:this.handleCallback});case"sex_types":return FormEntSexTypes({entity:entity,callback:this.handleCallback});case"commander_types":return FormEntCommanderTypes({entity:entity,callback:this.handleCallback});case"period_types":return FormEntPeriodTypes({entity:entity,callback:this.handleCallback});case"period_types_selector":return SelectorPeriodTypes({selected:current_id,entity:entity,callback:this.handleCallback});case"enumeration_types":return FormEntEnumerationTypes({entity:entity,callback:this.handleCallback});case"doc_type_groups":return TreeDocTypeGroups({entity:entity,callback:this.handleCallback});case"doc_type_groups_edit":return FormEntDocTypeGroups({entity:entity,callback:this.handleCallback});case"doc_secrecy_types":return FormEntDocSecrecyTypes({entity:entity,callback:this.handleCallback});case"doc_secrecy_types_selector":return SelectorDocSecrecyTypes({selected:current_id,entity:entity,callback:this.handleCallback});case"doc_urgency_types":return FormEntDocUrgencyTypes({entity:entity,callback:this.handleCallback});case"doc_urgency_types_selector":return SelectorDocUrgencyTypes({selected:current_id,entity:entity,callback:this.handleCallback});case"doc_types":return FormEntDocTypes({entity:entity,callback:this.handleCallback})}var msg="Не найден класс "+class_name;return React.DOM.div(null,ErrorMsg({msg:msg}))},handleCallback:function(callback){this.props.callback(callback)}}),CurrentClassMixin=function(){return{editMainListRoute:function(source,entity,dependencies){return entity.current_id?"new"==entity.current_id?(delete entity.current_id,MainItemEdit({source:source,entity:entity,dependencies:dependencies})):MainItemEdit({source:source,entity:entity,dependencies:dependencies}):MainList({source:source,entity:entity,dependencies:dependencies})},editMainTreeRoute:function(source,entity,dependencies){return entity.current_id?MainItemEdit({source:source,entity:entity,dependencies:dependencies}):MainTree({source:source,entity:entity,tree_dependency:dependencies})},handleCallback:function(callback){this.props.callback(callback)}}}(),FormEntRanks=React.createClass({displayName:"FormEntRanks",mixins:[CurrentClassMixin],render:function(){var output=this.editMainListRoute("ranks",this.props.entity,null);return React.DOM.div({className:"RankBox"},output)}}),FormEntPositions=React.createClass({displayName:"FormEntPositions",mixins:[CurrentClassMixin],render:function(){var dependencies=[];dependencies[0]={class_name:"rank_position",place:2,db_prop_name:"id"};var output=this.editMainListRoute("positions",this.props.entity,dependencies);return React.DOM.div({className:"PositionBox"},output)}}),FormEntRankPosition=React.createClass({displayName:"FormEntRankPosition",mixins:[CurrentClassMixin],render:function(){var source=[];return source[0]="positionsranks",source[1]="ranks",React.DOM.div({className:"item_attr"},React.DOM.div({className:"form_label"},"Звания соответствующие должности"),ListBoxTwoSide({source_left:source[0],source_right:source[1],entity:this.props.entity,callback:this.handleCallback}))}}),FormEntPassDocTypes=React.createClass({displayName:"FormEntPassDocTypes",mixins:[CurrentClassMixin],render:function(){var output=this.editMainListRoute("passdoctypes",this.props.entity,null);return React.DOM.div({className:"PassDocTypesBox"},output)}}),FormEntAddressTypes=React.createClass({displayName:"FormEntAddressTypes",mixins:[CurrentClassMixin],render:function(){var output=this.editMainListRoute("addresstypes",this.props.entity,null);return React.DOM.div({className:"AddressBox"},output)}}),FormEntCountries=React.createClass({displayName:"FormEntCountries",mixins:[CurrentClassMixin],render:function(){var output=this.editMainListRoute("countries",this.props.entity,null);return React.DOM.div({className:"CountriesBox"},output)}}),FormEntRegionTypes=React.createClass({displayName:"FormEntRegionTypes",mixins:[CurrentClassMixin],render:function(){var output=this.editMainListRoute("regiontypes",this.props.entity,null);return React.DOM.div({className:"RegionTypesBox"},output)}}),SelectorRegionTypes=React.createClass({displayName:"SelectorRegionTypes",mixins:[CurrentClassMixin],render:function(){return React.DOM.div({className:"selector RegionTypes"},React.DOM.label(null,"Тип региона"),SimpleSelect({source:"regiontypes",selected:this.props.selected,current_id:this.props.entity.current_id,callback:this.handleCallback}))}}),FormEntRegions=React.createClass({displayName:"FormEntRegions",mixins:[CurrentClassMixin],render:function(){var dependencies={};dependencies[0]={class_name:"region_types_selector",place:2,db_prop_name:"region_type"};var output=this.editMainListRoute("regions",this.props.entity,dependencies);return React.DOM.div({className:"RegionsBox"},output)}}),FormEntLocationTypes=React.createClass({displayName:"FormEntLocationTypes",mixins:[CurrentClassMixin],render:function(){var output=this.editMainListRoute("locationtypes",this.props.entity,null);
return React.DOM.div({className:"LocationTypesBox"},output)}}),FormEntStreetTypes=React.createClass({displayName:"FormEntStreetTypes",mixins:[CurrentClassMixin],render:function(){var output=this.editMainListRoute("streettypes",this.props.entity,null);return React.DOM.div({className:"StreetTypesBox"},output)}}),FormEntSexTypes=React.createClass({displayName:"FormEntSexTypes",mixins:[CurrentClassMixin],render:function(){var output=this.editMainListRoute("sextypes",this.props.entity,null);return React.DOM.div({className:"SexTypesBox"},output)}}),FormEntCommanderTypes=React.createClass({displayName:"FormEntCommanderTypes",mixins:[CurrentClassMixin],render:function(){var output=this.editMainListRoute("commandertypes",this.props.entity,null);return React.DOM.div({className:"CommanderTypesBox"},output)}}),FormEntPeriodTypes=React.createClass({displayName:"FormEntPeriodTypes",mixins:[CurrentClassMixin],render:function(){var output=this.editMainListRoute("periodtypes",this.props.entity,null);return React.DOM.div({className:"PeriodTypesBox"},output)}}),SelectorPeriodTypes=React.createClass({displayName:"SelectorPeriodTypes",mixins:[CurrentClassMixin],render:function(){return React.DOM.div({className:"selector PeriodTypes"},React.DOM.label(null,"Тип периода:"),SimpleSelect({source:"periodtypes",selected:this.props.selected,callback:this.handleCallback}))}}),FormEntEnumerationTypes=React.createClass({displayName:"FormEntEnumerationTypes",mixins:[CurrentClassMixin],render:function(){var dependencies={};dependencies[0]={class_name:"period_types_selector",place:3,db_prop_name:"period_type"};var output=this.editMainListRoute("enumerationtypes",this.props.entity,dependencies);return React.DOM.div({className:"EnumerationTypesBox"},output)}}),FormEntDocTypeGroups=React.createClass({displayName:"FormEntDocTypeGroups",mixins:[CurrentClassMixin],render:function(){var output=this.editMainTreeRoute("doctypegroups",this.props.entity,null);return React.DOM.div({className:"DocKindsBox"},output)}}),TreeDocTypeGroups=React.createClass({displayName:"TreeDocTypeGroups",mixins:[CurrentClassMixin],render:function(){var tree_dependency={};tree_dependency={source:"doctypes",entity_name:"doc_types",id_name_in_dependency:"doc_group_id",russian_name:"типы документов"};var output=this.editMainTreeRoute("doctypegroups",this.props.entity,tree_dependency);return React.DOM.div({className:"DocKindsBox"},output)}}),FormEntDocSecrecyTypes=React.createClass({displayName:"FormEntDocSecrecyTypes",mixins:[CurrentClassMixin],render:function(){var output=this.editMainListRoute("docsecrecytypes",this.props.entity,null);return React.DOM.div({className:"DocSecrecyTypesBox"},output)}}),SelectorDocSecrecyTypes=React.createClass({displayName:"SelectorDocSecrecyTypes",mixins:[CurrentClassMixin],render:function(){return React.DOM.div({className:"selector DocSecrecyTypes"},React.DOM.label(null,"Секретность"),SimpleSelect({source:"docsecrecytypes",selected:this.props.selected,entity:this.props.entity,callback:this.handleCallback}))}}),FormEntDocUrgencyTypes=React.createClass({displayName:"FormEntDocUrgencyTypes",mixins:[CurrentClassMixin],render:function(){var output=this.editMainListRoute("docurgencytypes",this.props.entity,null);return React.DOM.div({className:"DocUrgencyTypesBox"},output)}}),SelectorDocUrgencyTypes=React.createClass({displayName:"SelectorDocUrgencyTypes",mixins:[CurrentClassMixin],render:function(){return React.DOM.div({className:"selector DocurgencyTypes"},React.DOM.label(null,"Срочность"),SimpleSelect({source:"docurgencytypes",selected:this.props.selected,entity:this.props.entity,callback:this.handleCallback}))}}),FormEntDocTypes=React.createClass({displayName:"FormEntDocTypes",mixins:[CurrentClassMixin],render:function(){var dependencies={};dependencies[0]={class_name:"doc_secrecy_types_selector",place:5,db_prop_name:"secrecy_type"},dependencies[1]={class_name:"doc_urgency_types_selector",place:6,db_prop_name:"urgency_type"};var output=this.editMainListRoute("doctypes",this.props.entity,dependencies);return React.DOM.div({className:"DocTypesBox"},output)}});React.renderComponent(CatScreen({cat:"base"}),document.getElementById("left_panel")),React.renderComponent(MainWindow({screen_name:"ranks"}),document.getElementById("main_main"));var ItemEditBox=React.createClass({displayName:"ItemEditBox",getInitialState:function(){return{item:[],item_dependencies:[]}},saveForm:function(){console.info("item to save"),console.info(this.state.item)},itemUpdate:function(property){var current_item=this.state.item;for(var key in property)current_item[key]=property[key];current_item[property.db_prop_name]=property.value,this.setState({item:current_item})},componentWillMount:function(){window.addEventListener("saveButtonClick",this.saveForm,!0),this.setState({item:this.props.item})},componentWillUnmount:function(){window.removeEventListener("saveButtonClick",this.saveForm,!0)},render:function(){var editable=this.props.prototype.editable_properties,item=null;if(this.state.item)var item=this.state.item;var controls=[],counter=0,dependencies_by_place={},dependencies={};if(dependencies=this.props.dependencies,"object"==typeof dependencies)for(var key in dependencies){var place_key=dependencies[key].place;console.info("place_key= "+place_key),dependencies_by_place[place_key]=dependencies[key]}var self=this;for(var prop in editable){if("object"==typeof dependencies&&"undefined"!=typeof dependencies_by_place[counter]&&"undefined"!=typeof dependencies_by_place[counter].place&&counter==dependencies_by_place[counter].place&&controls.push(EntityBlock({entity_name:dependencies_by_place[counter].class_name,db_prop_name:dependencies_by_place[counter].db_prop_name,item:item,current_id:this.props.item[dependencies_by_place[counter].db_prop_name],callback:self.itemUpdate})),editable[prop]){var type=prop;controls.push(ControlRouter({type:properties_types[type],value:item[prop],name:type,russian_name:editable[prop],callback:this.itemUpdate,key:editable[prop]}))}counter++}if(0==controls.length)return ErrorMsg({msg:"Не найдено ни одного контрола"});var edit_properties_box=[];return edit_properties_box.push(React.DOM.form({role:"form",className:"ControlsBox"},controls)),React.DOM.div({className:"item"},edit_properties_box)}}),MainItemEdit=React.createClass({displayName:"MainItemEdit",getInitialState:function(){return{item:[]}},componentWillMount:function(){var self=this;$.ajax({type:"POST",url:"http://zend_test/main/"+this.props.source+"/"+this.props.entity.current_id,data:""+this.props.entity.current_id,success:function(response){console.info("response"),console.info(response),self.setState({item:response})}}).error(function(){alert("Network Error.")})},render:function(){var controls=[],key="edit_"+this.props.entity.name+"_1",item=[];return this.state.item.data&&(item=this.state.item.data[0]),this.state.item.prototype&&(controls[0]=ItemEditBox({item:item,prototype:this.state.item.prototype,key:key,dependencies:this.props.dependencies,entity:this.props.entity})),React.DOM.div(null,controls)}}),MainScreen=React.createClass({displayName:"MainScreen",render:function(){return React.DOM.div({className:"MainScreen"},EntityAttributesList({entity_id:this.props.entity_id}))}}),BaseScreen=React.createClass({displayName:"BaseScreen",getInitialState:function(){return{screen_name:"",entities:[]}},componentWillMount:function(){null==this.props.screen_name&&this.setState({screen_name:"welcome"}),this.setState({screen_name:this.props.screen_name});var entities=screen_entities;this.setState({entities:entities})},render:function(){var render_entities=[];return console.info(this.state.entities),console.info(this.props.screen_name),"[object Array]"!==Object.prototype.toString.call(this.state.entities[this.props.screen_name])?EntityBlock({entity_name:this.props.screen_name,key:this.props.screen_name}):(console.info("yes"),render_entities=this.state.entities[this.props.screen_name].map(function(ent){return EntityBlock({entity_name:ent,key:ent})}),React.DOM.div(null,render_entities))}}),MainWindow=React.createClass({displayName:"MainWindow",getInitialState:function(){return{screen_name:""}},handleCatLinkClick:function(e){this.setState({screen_name:e.detail.screen_name})},componentWillMount:function(){null!=this.props.screen_name&&this.setState({screen_name:this.props.screen_name}),window.addEventListener("catLinkClick",this.handleCatLinkClick,!0)},componentWillUnmount:function(){window.removeEventListener("catLinkClick",this.handleCatLinkClick,!0)},render:function(){return React.DOM.div(null,BaseScreen({screen_name:this.state.screen_name}),ModalWindowRouter(null))}}),ModalWindowRouter=React.createClass({displayName:"ModalWindowRouter",getInitialState:function(){return{action:"",entity:"",current_id:"",item:""}},modalOpen:function(event){this.setState({action:event.detail.action,entity:event.detail.entity,current_id:event.detail.current_id,item:event.detail.item})},modalClose:function(){this.setState({action:"",entity:"",current_id:"",item:""})},componentWillMount:function(){window.addEventListener("modalWindowOpen",this.modalOpen,!0),window.addEventListener("modalWindowClose",this.modalClose,!0)},componentWillUnmount:function(){window.removeEventListener("modalWindowOpen",this.modalOpen,!0),window.addEventListener("modalWindowClose",this.modalClose,!0)},render:function(){switch(this.state.action){case"add":return ModalWindowAdd({entity:this.state.entity,item:"new",current_id:"new"});case"edit":return ModalWindowEdit({entity:this.state.entity,current_id:this.state.current_id});case"delete":return ModalWindowDelete({entity:this.state.entity,current_id:this.state.current_id,item:this.state.item});case"save":return ModalWindowSave(null)}return React.DOM.div(null," ")}}),BootstrapModalMixin=function(){var handlerProps=["handleShow","handleShown","handleHide","handleHidden"],bsModalEvents={handleShow:"show.bs.modal",handleShown:"shown.bs.modal",handleHide:"hide.bs.modal",handleHidden:"hidden.bs.modal"};return{propTypes:{handleShow:React.PropTypes.func,handleShown:React.PropTypes.func,handleHide:React.PropTypes.func,handleHidden:React.PropTypes.func,backdrop:React.PropTypes.bool,keyboard:React.PropTypes.bool,show:React.PropTypes.bool,remote:React.PropTypes.string},getDefaultProps:function(){return{backdrop:!0,keyboard:!0,show:!0,remote:""}},componentDidMount:function(){var $modal=$(this.getDOMNode()).modal({backdrop:this.props.backdrop,keyboard:this.props.keyboard,show:this.props.show,remote:this.props.remote});handlerProps.forEach(function(prop){this[prop]&&$modal.on(bsModalEvents[prop],this[prop]),this.props[prop]&&$modal.on(bsModalEvents[prop],this.props[prop])}.bind(this))},componentWillUnmount:function(){var $modal=$(this.getDOMNode());handlerProps.forEach(function(prop){this[prop]&&$modal.off(bsModalEvents[prop],this[prop]),this.props[prop]&&$modal.off(bsModalEvents[prop],this.props[prop])}.bind(this))},hide:function(){$(this.getDOMNode()).modal("hide");var customEvent=new CustomEvent("modalWindowClose");this.getDOMNode().dispatchEvent(customEvent)},show:function(){$(this.getDOMNode()).modal("show")},toggle:function(){$(this.getDOMNode()).modal("toggle")},renderCloseButton:function(){var inner_html={__html:"&times"};return React.DOM.button({type:"button",className:"close",onClick:this.hide,dangerouslySetInnerHTML:inner_html})}}}(),ModalWindowAdd=React.createClass({displayName:"ModalWindowAdd",getInitialState:function(){return{"var":""}},handleShowModal:function(){this.refs.modal.show()},handleExternalHide:function(){this.refs.modal.hide()},render:function(){var buttons=[{type:"success",text:"Добавить",handler:this.handleDoingNothing},{type:"danger",text:"Отмена",handler:this.handleExternalHide}],header="Новая запись в ",content=EntityBlock({entity_name:this.props.entity,item:this.props.current_id});return ModalWindowBase({ref:"modal",show:!1,header:header,buttons:buttons},content)}}),ModalWindowEdit=React.createClass({displayName:"ModalWindowEdit",getInitialState:function(){return{"var":""}},handleShowModal:function(){this.refs.modal.show()},handleExternalHide:function(){this.refs.modal.hide()},throwSave:function(){var customEvent=new CustomEvent("saveButtonClick",{detail:{id:this.props.current_id},bubbles:!0});this.getDOMNode().dispatchEvent(customEvent)},render:function(){var buttons=[{type:"success",text:"Сохранить",handler:this.throwSave},{type:"danger",text:"Отмена",handler:this.handleExternalHide}],header="Редактировать ";return ModalWindowBase({ref:"modal",show:!1,header:header,buttons:buttons},EntityBlock({entity_name:this.props.entity,item:this.props.current_id}))}}),ModalWindowDelete=React.createClass({displayName:"ModalWindowDelete",getInitialState:function(){return{"var":""}},handleShowModal:function(){this.refs.modal.show()},handleExternalHide:function(){this.refs.modal.hide()},throwDelete:function(){},render:function(){var buttons=[{type:"success",text:"Удалить",handler:this.throwDelete},{type:"default",text:"Отмена",handler:this.handleExternalHide}],header="Вы уверены?",msg="Будет удален обьект «"+this.props.item.name+"»";if(this.props.item.childNodes){msg+=", а также все дочерние обьекты."}else msg+=".";return ModalWindowDeleteConfirmation({ref:"modal",show:!1,header:header,buttons:buttons,msg:msg})}}),ModalWindowBase=React.createClass({displayName:"ModalWindowBase",mixins:[BootstrapModalMixin],componentDidMount:function(){this.show()},render:function(){var buttons=this.props.buttons.map(function(button){return React.DOM.button({type:"button",className:"btn btn-"+button.type,onClick:button.handler,key:button.type},button.text)});return React.DOM.div({className:"modal fade"},React.DOM.div({className:"modal-dialog"},React.DOM.div({className:"modal-content"},React.DOM.div({className:"modal-header"},this.renderCloseButton(),React.DOM.strong(null,this.props.header)),React.DOM.div({className:"modal-body"},this.props.children),React.DOM.div({className:"modal-footer"},buttons))))}}),ModalWindowDeleteConfirmation=React.createClass({displayName:"ModalWindowDeleteConfirmation",mixins:[BootstrapModalMixin],componentDidMount:function(){this.show()},render:function(){var buttons=this.props.buttons.map(function(button){return React.DOM.button({type:"button",className:"btn btn-"+button.type,onClick:button.handler,key:button.type},button.text)}),msg="";return this.props.msg&&(msg=React.DOM.div({className:"modal-body"},this.props.msg)),React.DOM.div({className:"modal fade"},React.DOM.div({className:"modal-dialog"},React.DOM.div({className:"modal-content alert-warning"},React.DOM.div({className:"modal-header"},this.renderCloseButton(),React.DOM.strong(null,this.props.header)),msg,React.DOM.div({className:"modal-footer"},buttons))))}}),SearchBox=React.createClass({displayName:"SearchBox",doSearch:function(){var query=this.refs.searchInput.getDOMNode().value;this.props.startSearch(query)},render:function(){return React.DOM.div(null,React.DOM.input({type:"text",ref:"searchInput",placeholder:"Поиск",value:this.props.query,onChange:this.doSearch}))}}),InstantSearch=React.createClass({displayName:"InstantSearch",startSearch:function(query){$.ajax({type:"POST",url:"http://zend_test/main/"+this.props.source,data:query,success:function(data){this.props.searchReceived(data)}.bind(this),dataType:"json"})},componentDidMount:function(){this.setState({current_entity:this.props.entity_name})},render:function(){return SearchBox({startSearch:this.startSearch})}});