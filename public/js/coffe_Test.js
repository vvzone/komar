// Generated by CoffeeScript 1.8.0
(function() {
  var MenuBlock, Tree;

  MenuBlock = React.createClass({
    getInitialState: function() {
      return {
        selected: null,
        menu_array: []
      };
    },
    clickHandle: function(event) {
      return this.setState({
        selected: event.data.id
      });
    },
    componentDidMount: function() {
      return console.info('mounted...');
    },
    render: function() {
      var item, wrap, _i, _len, _ref, _results;
      wrap = function(item) {
        var selected;
        selected = (this.selected = item.id) ? "selected" : "";
        return "<div className=" + selected + " onClick=" + this.clickHandle + ">" + item.name + "</div>";
      };
      _ref = this.props.menu_array;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        _results.push(wrap(item));
      }
      return _results;
    }
  });

  Tree = React.createClass({
    render: function() {
      var child, _i, _len, _ref, _results;
      if (this.node.childs != null) {
        _ref = this.node.childs;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          child = _ref[_i];
          _results.push(child);
        }
        return _results;
      }
    }
  });

}).call(this);

//# sourceMappingURL=coffe_Test.js.map
